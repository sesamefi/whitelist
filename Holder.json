{
  "contractName": "Holder",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressToWhitelist",
          "type": "address"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exampleFunction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressToWhitelist",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressToWhitelist\",\"type\":\"address\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exampleFunction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressToWhitelist\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Holder.sol\":\"Holder\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"project:/contracts/Holder.sol\":{\"keccak256\":\"0x9a182aefb6e65a0ec41cda138a6f9748e4aa9b0c395a2b4b42bd3065605ddc86\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3fd4b4d70d19bf7addc0e3cfcd779b61cedd2701417c6f0488f3253759552239\",\"dweb:/ipfs/QmUGDrYzRMqWtjtuhqk3bk788bsTxugZfxuxxJr4qA6rTy\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c238061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461012c5780638da5cb5b146101365780639857518814610154578063ce2f67a214610170578063f2624b5d1461018e578063f2fde38b146101ac576100a9565b806306c933d8146100ae57806312065fe0146100de5780633ccfd60b146100fc578063421b2d8b1461010657806343d726d614610122575b600080fd5b6100c860048036038101906100c3919061091f565b6101c8565b6040516100d59190610967565b60405180910390f35b6100e66101e8565b6040516100f3919061099b565b60405180910390f35b6101046101f0565b005b610120600480360381019061011b919061091f565b6102c2565b005b61012a6103a3565b005b61013461043f565b005b61013e6104c7565b60405161014b91906109c5565b60405180910390f35b61016e6004803603810190610169919061091f565b6104f0565b005b6101786105d1565b6040516101859190610967565b60405180910390f35b610196610668565b6040516101a3919061099b565b60405180910390f35b6101c660048036038101906101c1919061091f565b610679565b005b60026020528060005260406000206000915054906101000a900460ff1681565b600047905090565b6101f8610770565b73ffffffffffffffffffffffffffffffffffffffff166102166104c7565b73ffffffffffffffffffffffffffffffffffffffff161461026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610a3d565b60405180910390fd5b60006102766104c7565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102be573d6000803e3d6000fd5b5050565b6102ca610770565b73ffffffffffffffffffffffffffffffffffffffff166102e86104c7565b73ffffffffffffffffffffffffffffffffffffffff161461033e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033590610a3d565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506103a06001610778565b50565b6103ab610770565b73ffffffffffffffffffffffffffffffffffffffff166103c96104c7565b73ffffffffffffffffffffffffffffffffffffffff161461041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610a3d565b60405180910390fd5b6104276104c7565b73ffffffffffffffffffffffffffffffffffffffff16ff5b610447610770565b73ffffffffffffffffffffffffffffffffffffffff166104656104c7565b73ffffffffffffffffffffffffffffffffffffffff16146104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b290610a3d565b60405180910390fd5b6104c5600061078e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104f8610770565b73ffffffffffffffffffffffffffffffffffffffff166105166104c7565b73ffffffffffffffffffffffffffffffffffffffff161461056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610a3d565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506105ce6001610852565b50565b600033600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790610acf565b60405180910390fd5b600191505090565b600061067460016108ae565b905090565b610681610770565b73ffffffffffffffffffffffffffffffffffffffff1661069f6104c7565b73ffffffffffffffffffffffffffffffffffffffff16146106f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec90610a3d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90610b61565b60405180910390fd5b61076d8161078e565b50565b600033905090565b6001816000016000828254019250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000816000015490506000811161089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089590610bcd565b60405180910390fd5b6001810382600001819055505050565b600081600001549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108ec826108c1565b9050919050565b6108fc816108e1565b811461090757600080fd5b50565b600081359050610919816108f3565b92915050565b600060208284031215610935576109346108bc565b5b60006109438482850161090a565b91505092915050565b60008115159050919050565b6109618161094c565b82525050565b600060208201905061097c6000830184610958565b92915050565b6000819050919050565b61099581610982565b82525050565b60006020820190506109b0600083018461098c565b92915050565b6109bf816108e1565b82525050565b60006020820190506109da60008301846109b6565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a276020836109e0565b9150610a32826109f1565b602082019050919050565b60006020820190508181036000830152610a5681610a1a565b9050919050565b7f57686974656c6973743a20596f75206e65656420746f2062652077686974656c60008201527f6973746564000000000000000000000000000000000000000000000000000000602082015250565b6000610ab96025836109e0565b9150610ac482610a5d565b604082019050919050565b60006020820190508181036000830152610ae881610aac565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b4b6026836109e0565b9150610b5682610aef565b604082019050919050565b60006020820190508181036000830152610b7a81610b3e565b9050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b6000610bb7601b836109e0565b9150610bc282610b81565b602082019050919050565b60006020820190508181036000830152610be681610baa565b905091905056fea26469706673582212207384d3d50a84b88cebee435cdb14a7a66628ca4e4ea43b88bb29aa3771992a4c64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461012c5780638da5cb5b146101365780639857518814610154578063ce2f67a214610170578063f2624b5d1461018e578063f2fde38b146101ac576100a9565b806306c933d8146100ae57806312065fe0146100de5780633ccfd60b146100fc578063421b2d8b1461010657806343d726d614610122575b600080fd5b6100c860048036038101906100c3919061091f565b6101c8565b6040516100d59190610967565b60405180910390f35b6100e66101e8565b6040516100f3919061099b565b60405180910390f35b6101046101f0565b005b610120600480360381019061011b919061091f565b6102c2565b005b61012a6103a3565b005b61013461043f565b005b61013e6104c7565b60405161014b91906109c5565b60405180910390f35b61016e6004803603810190610169919061091f565b6104f0565b005b6101786105d1565b6040516101859190610967565b60405180910390f35b610196610668565b6040516101a3919061099b565b60405180910390f35b6101c660048036038101906101c1919061091f565b610679565b005b60026020528060005260406000206000915054906101000a900460ff1681565b600047905090565b6101f8610770565b73ffffffffffffffffffffffffffffffffffffffff166102166104c7565b73ffffffffffffffffffffffffffffffffffffffff161461026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610a3d565b60405180910390fd5b60006102766104c7565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102be573d6000803e3d6000fd5b5050565b6102ca610770565b73ffffffffffffffffffffffffffffffffffffffff166102e86104c7565b73ffffffffffffffffffffffffffffffffffffffff161461033e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033590610a3d565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506103a06001610778565b50565b6103ab610770565b73ffffffffffffffffffffffffffffffffffffffff166103c96104c7565b73ffffffffffffffffffffffffffffffffffffffff161461041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610a3d565b60405180910390fd5b6104276104c7565b73ffffffffffffffffffffffffffffffffffffffff16ff5b610447610770565b73ffffffffffffffffffffffffffffffffffffffff166104656104c7565b73ffffffffffffffffffffffffffffffffffffffff16146104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b290610a3d565b60405180910390fd5b6104c5600061078e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104f8610770565b73ffffffffffffffffffffffffffffffffffffffff166105166104c7565b73ffffffffffffffffffffffffffffffffffffffff161461056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610a3d565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506105ce6001610852565b50565b600033600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790610acf565b60405180910390fd5b600191505090565b600061067460016108ae565b905090565b610681610770565b73ffffffffffffffffffffffffffffffffffffffff1661069f6104c7565b73ffffffffffffffffffffffffffffffffffffffff16146106f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec90610a3d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90610b61565b60405180910390fd5b61076d8161078e565b50565b600033905090565b6001816000016000828254019250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000816000015490506000811161089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089590610bcd565b60405180910390fd5b6001810382600001819055505050565b600081600001549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108ec826108c1565b9050919050565b6108fc816108e1565b811461090757600080fd5b50565b600081359050610919816108f3565b92915050565b600060208284031215610935576109346108bc565b5b60006109438482850161090a565b91505092915050565b60008115159050919050565b6109618161094c565b82525050565b600060208201905061097c6000830184610958565b92915050565b6000819050919050565b61099581610982565b82525050565b60006020820190506109b0600083018461098c565b92915050565b6109bf816108e1565b82525050565b60006020820190506109da60008301846109b6565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a276020836109e0565b9150610a32826109f1565b602082019050919050565b60006020820190508181036000830152610a5681610a1a565b9050919050565b7f57686974656c6973743a20596f75206e65656420746f2062652077686974656c60008201527f6973746564000000000000000000000000000000000000000000000000000000602082015250565b6000610ab96025836109e0565b9150610ac482610a5d565b604082019050919050565b60006020820190508181036000830152610ae881610aac565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b4b6026836109e0565b9150610b5682610aef565b604082019050919050565b60006020820190508181036000830152610b7a81610b3e565b9050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b6000610bb7601b836109e0565b9150610bc282610b81565b602082019050919050565b60006020820190508181036000830152610be681610baa565b905091905056fea26469706673582212207384d3d50a84b88cebee435cdb14a7a66628ca4e4ea43b88bb29aa3771992a4c64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6582:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:4",
                "type": ""
              }
            ],
            "src": "466:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:4",
                "type": ""
              }
            ],
            "src": "568:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:4",
                "type": ""
              }
            ],
            "src": "696:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:4",
                "type": ""
              }
            ],
            "src": "841:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1218:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1228:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1253:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1246:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1228:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1200:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1210:7:4",
                "type": ""
              }
            ],
            "src": "1176:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1331:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1348:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1368:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1353:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1341:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1341:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1319:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1326:3:4",
                "type": ""
              }
            ],
            "src": "1272:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1489:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1501:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1512:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1497:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1489:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1563:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1576:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1587:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1572:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1572:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1525:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1525:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1451:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1463:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1474:4:4",
                "type": ""
              }
            ],
            "src": "1387:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1648:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1658:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1669:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1658:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1630:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1640:7:4",
                "type": ""
              }
            ],
            "src": "1603:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1751:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1768:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1791:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1773:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1761:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1761:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1761:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1739:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1746:3:4",
                "type": ""
              }
            ],
            "src": "1686:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1908:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1918:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1930:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1941:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1926:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1926:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1918:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1998:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2011:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2022:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1954:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1954:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1954:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1880:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1892:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1903:4:4",
                "type": ""
              }
            ],
            "src": "1810:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2103:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2120:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2143:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2125:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2125:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2113:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2113:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2113:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2091:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2098:3:4",
                "type": ""
              }
            ],
            "src": "2038:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2260:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2270:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2282:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2293:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2278:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2270:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2350:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2363:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2374:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2359:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2359:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2306:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2306:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2306:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2232:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2244:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2255:4:4",
                "type": ""
              }
            ],
            "src": "2162:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2486:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2503:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2508:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2496:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2496:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2496:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2524:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2543:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2548:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2539:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2539:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2524:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2458:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2463:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2474:11:4",
                "type": ""
              }
            ],
            "src": "2390:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2671:76:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2693:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2701:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2689:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2689:14:4"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2705:34:4",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2682:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2682:58:4"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2663:6:4",
                "type": ""
              }
            ],
            "src": "2565:182:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2899:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2909:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2975:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2980:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2916:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2916:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2909:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3081:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "2992:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2992:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2992:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3094:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3105:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3110:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3101:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3101:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3094:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2887:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2895:3:4",
                "type": ""
              }
            ],
            "src": "2753:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3296:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3306:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3318:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3329:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3314:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3314:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3306:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3353:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3364:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3349:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3349:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3372:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3378:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3368:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3368:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3342:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3342:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3342:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3398:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3532:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3406:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3406:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3398:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3276:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3291:4:4",
                "type": ""
              }
            ],
            "src": "3125:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3656:118:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3678:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3686:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3674:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3674:14:4"
                      },
                      {
                        "hexValue": "57686974656c6973743a20596f75206e65656420746f2062652077686974656c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3690:34:4",
                        "type": "",
                        "value": "Whitelist: You need to be whitel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3667:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3667:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3667:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3746:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3754:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3742:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3742:15:4"
                      },
                      {
                        "hexValue": "6973746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3759:7:4",
                        "type": "",
                        "value": "isted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3735:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3735:32:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3735:32:4"
                }
              ]
            },
            "name": "store_literal_in_memory_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3648:6:4",
                "type": ""
              }
            ],
            "src": "3550:224:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3926:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3936:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4002:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4007:2:4",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3943:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3943:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3936:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4108:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986",
                      "nodeType": "YulIdentifier",
                      "src": "4019:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4019:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4019:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4121:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4132:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4137:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4128:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4128:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4121:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3914:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3922:3:4",
                "type": ""
              }
            ],
            "src": "3780:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4323:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4333:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4345:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4356:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4341:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4341:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4333:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4380:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4391:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4376:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4376:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4399:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4405:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4395:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4395:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4369:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4369:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4369:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4425:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4559:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4433:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4433:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4425:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4303:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4318:4:4",
                "type": ""
              }
            ],
            "src": "4152:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4683:119:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4705:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4713:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4701:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4701:14:4"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4717:34:4",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4694:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4694:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4694:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4773:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4781:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4769:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4769:15:4"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4786:8:4",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4762:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4762:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4762:33:4"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4675:6:4",
                "type": ""
              }
            ],
            "src": "4577:225:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4954:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4964:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5030:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5035:2:4",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4971:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4971:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4964:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5136:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "5047:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5047:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5047:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5149:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5160:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5165:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5156:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5156:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5149:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4942:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4950:3:4",
                "type": ""
              }
            ],
            "src": "4808:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5351:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5361:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5373:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5384:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5369:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5369:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5361:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5408:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5419:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5404:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5404:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5427:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5433:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5423:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5423:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5397:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5397:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5453:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5587:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5461:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5461:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5453:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5331:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5346:4:4",
                "type": ""
              }
            ],
            "src": "5180:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5711:71:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5733:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5741:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5729:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5729:14:4"
                      },
                      {
                        "hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5745:29:4",
                        "type": "",
                        "value": "Counter: decrement overflow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5722:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5722:53:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5722:53:4"
                }
              ]
            },
            "name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5703:6:4",
                "type": ""
              }
            ],
            "src": "5605:177:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5934:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5944:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6010:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6015:2:4",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5951:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5951:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5944:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6116:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                      "nodeType": "YulIdentifier",
                      "src": "6027:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6027:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6129:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6140:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6145:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6136:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6136:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6129:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5922:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5930:3:4",
                "type": ""
              }
            ],
            "src": "5788:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6331:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6341:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6353:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6364:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6349:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6349:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6341:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6388:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6399:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6384:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6384:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6407:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6413:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6403:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6403:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6377:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6377:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6433:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6567:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6441:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6441:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6433:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6311:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6326:4:4",
                "type": ""
              }
            ],
            "src": "6160:419:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986(memPtr) {\n\n        mstore(add(memPtr, 0), \"Whitelist: You need to be whitel\")\n\n        mstore(add(memPtr, 32), \"isted\")\n\n    }\n\n    function abi_encode_t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter: decrement overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "2763:326:3:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;2763:326:3;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;2763:326:3:-;;;;;;;",
  "deployedSourceMap": "2763:326:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2804:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2907:180;;;:::i;:::-;;814:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1377:81;;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;987:271:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1464:146;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1264:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;566:52:3;;;;;;;;;;;;;;;;;;;;;;:::o;2804:97::-;2847:7;2873:21;2866:28;;2804:97;:::o;2907:180::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2954:29:3::1;3017:7;:5;:7::i;:::-;2993:32;;3035:13;:22;;:45;3058:21;3035:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2944:143;2907:180::o:0;814:167::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;931:4:3::1;887:20;:41;908:19;887:41;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;945:29;:17;:27;:29::i;:::-;814:167:::0;:::o;1377:81::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1442:7:3::1;:5;:7::i;:::-;1421:30;;;1668:101:0::0;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;987:271:3:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1107:5:3::1;1063:20;:41;1084:19;1063:41;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;1222:29;:17;:27;:29::i;:::-;987:271:::0;:::o;1464:146::-;1570:4;1541:10;697:20;:30;718:8;697:30;;;;;;;;;;;;;;;;;;;;;;;;;676:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;1598:4:::1;1590:13;;1464:146:::0;;:::o;1264:107::-;1311:7;1337:27;:17;:25;:27::i;:::-;1330:34;;1264:107;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;945:123:2:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1074:229:2:-;1137:13;1153:7;:14;;;1137:30;;1193:1;1185:5;:9;1177:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1285:1;1277:5;:9;1260:7;:14;;:26;;;;1127:176;1074:229;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:77::-;1640:7;1669:5;1658:16;;1603:77;;;:::o;1686:118::-;1773:24;1791:5;1773:24;:::i;:::-;1768:3;1761:37;1686:118;;:::o;1810:222::-;1903:4;1941:2;1930:9;1926:18;1918:26;;1954:71;2022:1;2011:9;2007:17;1998:6;1954:71;:::i;:::-;1810:222;;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:169::-;2474:11;2508:6;2503:3;2496:19;2548:4;2543:3;2539:14;2524:29;;2390:169;;;;:::o;2565:182::-;2705:34;2701:1;2693:6;2689:14;2682:58;2565:182;:::o;2753:366::-;2895:3;2916:67;2980:2;2975:3;2916:67;:::i;:::-;2909:74;;2992:93;3081:3;2992:93;:::i;:::-;3110:2;3105:3;3101:12;3094:19;;2753:366;;;:::o;3125:419::-;3291:4;3329:2;3318:9;3314:18;3306:26;;3378:9;3372:4;3368:20;3364:1;3353:9;3349:17;3342:47;3406:131;3532:4;3406:131;:::i;:::-;3398:139;;3125:419;;;:::o;3550:224::-;3690:34;3686:1;3678:6;3674:14;3667:58;3759:7;3754:2;3746:6;3742:15;3735:32;3550:224;:::o;3780:366::-;3922:3;3943:67;4007:2;4002:3;3943:67;:::i;:::-;3936:74;;4019:93;4108:3;4019:93;:::i;:::-;4137:2;4132:3;4128:12;4121:19;;3780:366;;;:::o;4152:419::-;4318:4;4356:2;4345:9;4341:18;4333:26;;4405:9;4399:4;4395:20;4391:1;4380:9;4376:17;4369:47;4433:131;4559:4;4433:131;:::i;:::-;4425:139;;4152:419;;;:::o;4577:225::-;4717:34;4713:1;4705:6;4701:14;4694:58;4786:8;4781:2;4773:6;4769:15;4762:33;4577:225;:::o;4808:366::-;4950:3;4971:67;5035:2;5030:3;4971:67;:::i;:::-;4964:74;;5047:93;5136:3;5047:93;:::i;:::-;5165:2;5160:3;5156:12;5149:19;;4808:366;;;:::o;5180:419::-;5346:4;5384:2;5373:9;5369:18;5361:26;;5433:9;5427:4;5423:20;5419:1;5408:9;5404:17;5397:47;5461:131;5587:4;5461:131;:::i;:::-;5453:139;;5180:419;;;:::o;5605:177::-;5745:29;5741:1;5733:6;5729:14;5722:53;5605:177;:::o;5788:366::-;5930:3;5951:67;6015:2;6010:3;5951:67;:::i;:::-;5944:74;;6027:93;6116:3;6027:93;:::i;:::-;6145:2;6140:3;6136:12;6129:19;;5788:366;;;:::o;6160:419::-;6326:4;6364:2;6353:9;6349:18;6341:26;;6413:9;6407:4;6403:20;6399:1;6388:9;6384:17;6377:47;6441:131;6567:4;6441:131;:::i;:::-;6433:139;;6160:419;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ninterface Whitelist {\n    function addUser(address _addressToWhitelist) external;\n\n    function removeUser(address _addressToWhitelist) external;\n\n    function whitelistCount() external view returns (uint256);\n\n    function close() external;\n}\n\ncontract PublicWhitelist is Ownable, Whitelist {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _whiteListCounter;\n\n    mapping(address => bool) public whitelistedAddresses;\n\n    modifier isWhitelisted(address _address) {\n        require(\n            whitelistedAddresses[_address],\n            \"Whitelist: You need to be whitelisted\"\n        );\n        _;\n    }\n\n    function addUser(address _addressToWhitelist) public onlyOwner {\n        whitelistedAddresses[_addressToWhitelist] = true;\n        _whiteListCounter.increment();\n    }\n\n    function removeUser(address _addressToWhitelist) public onlyOwner {\n        whitelistedAddresses[_addressToWhitelist] = false;\n        /* Si on ajoute ce test le coût en gas passe à 60000\n        if (whitelistCount() > 0) */\n        _whiteListCounter.decrement();\n    }\n\n    function whitelistCount() public view returns (uint256) {\n        return _whiteListCounter.current();\n    }\n\n    function close() public onlyOwner {\n        selfdestruct(payable(owner()));\n    }\n\n    function exampleFunction()\n        public\n        view\n        isWhitelisted(msg.sender)\n        returns (bool)\n    {\n        return (true);\n    }\n}\n\ncontract AuthorisedWhitelist is PublicWhitelist {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _whiteListCounter;\n\n    mapping(address => bool) private compliantAddresses;\n\n    modifier isAuthorised(address _address) {\n        require(\n            whitelistedAddresses[_address],\n            \"Whitelist: You need to be whitelisted\"\n        );\n        _;\n    }\n\n    function addCertificate(address _addressToWhitelist) public onlyOwner {\n        compliantAddresses[_addressToWhitelist] = true;\n        whitelistedAddresses[_addressToWhitelist] = true;\n        _whiteListCounter.increment();\n    }\n\n    function removeCertificate(address _addressToWhitelist) public onlyOwner {\n        compliantAddresses[_addressToWhitelist] = false;\n        whitelistedAddresses[_addressToWhitelist] = false;\n        /* Si on ajoute ce test le coût en gas passe à 60000\n        if (whitelistCount() > 0) */\n        _whiteListCounter.decrement();\n    }\n\n    function checkUser(address _address)\n        public\n        view\n        isAuthorised(msg.sender)\n        returns (bool)\n    {\n        return compliantAddresses[_address];\n    }\n}\n\ncontract Holder is PublicWhitelist {\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    function withdraw() public onlyOwner {\n        address payable owner_address;\n        owner_address = payable(owner());\n        owner_address.transfer(address(this).balance);\n    }\n}\n",
  "sourcePath": "/Users/cramananjaona/Public/Programmes/Javascript/sesame2/contracts/Holder.sol",
  "ast": {
    "absolutePath": "project:/contracts/Holder.sol",
    "exportedSymbols": {
      "AuthorisedWhitelist": [
        420
      ],
      "Context": [
        126
      ],
      "Counters": [
        200
      ],
      "Holder": [
        462
      ],
      "Ownable": [
        104
      ],
      "PublicWhitelist": [
        327
      ],
      "Whitelist": [
        223
      ]
    },
    "id": 463,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 202,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 203,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 463,
        "sourceUnit": 105,
        "src": "70:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 204,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 463,
        "sourceUnit": 201,
        "src": "123:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Whitelist",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 223,
        "linearizedBaseContracts": [
          223
        ],
        "name": "Whitelist",
        "nameLocation": "187:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "421b2d8b",
            "id": 209,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nameLocation": "212:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_addressToWhitelist",
                  "nameLocation": "228:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "220:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "219:29:3"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:0:3"
            },
            "scope": 223,
            "src": "203:55:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "98575188",
            "id": 214,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeUser",
            "nameLocation": "273:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "_addressToWhitelist",
                  "nameLocation": "292:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "284:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:29:3"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:0:3"
            },
            "scope": 223,
            "src": "264:58:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "f2624b5d",
            "id": 219,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "whitelistCount",
            "nameLocation": "337:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "351:2:3"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "377:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:9:3"
            },
            "scope": 223,
            "src": "328:58:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "43d726d6",
            "id": 222,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "401:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:3"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:3"
            },
            "scope": 223,
            "src": "392:26:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 463,
        "src": "177:243:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 224,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "450:7:3"
            },
            "id": 225,
            "nodeType": "InheritanceSpecifier",
            "src": "450:7:3"
          },
          {
            "baseName": {
              "id": 226,
              "name": "Whitelist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 223,
              "src": "459:9:3"
            },
            "id": 227,
            "nodeType": "InheritanceSpecifier",
            "src": "459:9:3"
          }
        ],
        "canonicalName": "PublicWhitelist",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 327,
        "linearizedBaseContracts": [
          327,
          223,
          104,
          126
        ],
        "name": "PublicWhitelist",
        "nameLocation": "431:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 231,
            "libraryName": {
              "id": 228,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 200,
              "src": "481:8:3"
            },
            "nodeType": "UsingForDirective",
            "src": "475:36:3",
            "typeName": {
              "id": 230,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 229,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 132,
                "src": "494:16:3"
              },
              "referencedDeclaration": 132,
              "src": "494:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$132_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 234,
            "mutability": "mutable",
            "name": "_whiteListCounter",
            "nameLocation": "542:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 327,
            "src": "517:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$132_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 233,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 232,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 132,
                "src": "517:16:3"
              },
              "referencedDeclaration": 132,
              "src": "517:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$132_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "06c933d8",
            "id": 238,
            "mutability": "mutable",
            "name": "whitelistedAddresses",
            "nameLocation": "598:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 327,
            "src": "566:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 237,
              "keyType": {
                "id": 235,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "574:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "566:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 236,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "585:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "666:142:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 243,
                          "name": "whitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "697:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 245,
                        "indexExpression": {
                          "id": 244,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "718:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "697:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973743a20596f75206e65656420746f2062652077686974656c6973746564",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "741:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986",
                          "typeString": "literal_string \"Whitelist: You need to be whitelisted\""
                        },
                        "value": "Whitelist: You need to be whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986",
                          "typeString": "literal_string \"Whitelist: You need to be whitelisted\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "676:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:114:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "676:114:3"
                },
                {
                  "id": 249,
                  "nodeType": "PlaceholderStatement",
                  "src": "800:1:3"
                }
              ]
            },
            "id": 251,
            "name": "isWhitelisted",
            "nameLocation": "634:13:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "656:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "648:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "647:18:3"
            },
            "src": "625:183:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              209
            ],
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "877:104:3",
              "statements": [
                {
                  "expression": {
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 258,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "887:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 260,
                      "indexExpression": {
                        "id": 259,
                        "name": "_addressToWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "908:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "887:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "931:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "887:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "887:48:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 264,
                        "name": "_whiteListCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "945:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$132_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 158,
                      "src": "945:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$132_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$132_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "945:29:3"
                }
              ]
            },
            "functionSelector": "421b2d8b",
            "id": 270,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 256,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 255,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "867:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "867:9:3"
              }
            ],
            "name": "addUser",
            "nameLocation": "823:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_addressToWhitelist",
                  "nameLocation": "839:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "831:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "830:29:3"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "877:0:3"
            },
            "scope": 327,
            "src": "814:167:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              214
            ],
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "1053:205:3",
              "statements": [
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 277,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "1063:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 279,
                      "indexExpression": {
                        "id": 278,
                        "name": "_addressToWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "1084:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1063:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1107:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1063:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:49:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 283,
                        "name": "_whiteListCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "1222:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$132_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decrement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "1222:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$132_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$132_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1222:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:29:3"
                }
              ]
            },
            "functionSelector": "98575188",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 275,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 274,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1043:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1043:9:3"
              }
            ],
            "name": "removeUser",
            "nameLocation": "996:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "_addressToWhitelist",
                  "nameLocation": "1015:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "1007:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1006:29:3"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1053:0:3"
            },
            "scope": 327,
            "src": "987:271:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              219
            ],
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "1320:51:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 294,
                        "name": "_whiteListCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "1337:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$132_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "1337:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$132_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$132_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 293,
                  "id": 297,
                  "nodeType": "Return",
                  "src": "1330:34:3"
                }
              ]
            },
            "functionSelector": "f2624b5d",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whitelistCount",
            "nameLocation": "1273:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:2:3"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "1311:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:9:3"
            },
            "scope": 327,
            "src": "1264:107:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              222
            ],
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "1411:47:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 307,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1442:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1442:7:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1434:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 305,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1434:8:3",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1434:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 304,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "1421:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:30:3"
                }
              ]
            },
            "functionSelector": "43d726d6",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 301,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1401:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1401:9:3"
              }
            ],
            "name": "close",
            "nameLocation": "1386:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1391:2:3"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:0:3"
            },
            "scope": 327,
            "src": "1377:81:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "1580:30:3",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1598:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 323,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1597:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 321,
                  "id": 324,
                  "nodeType": "Return",
                  "src": "1590:13:3"
                }
              ]
            },
            "functionSelector": "ce2f67a2",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 316,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1541:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1541:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 318,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 315,
                  "name": "isWhitelisted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 251,
                  "src": "1527:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1527:25:3"
              }
            ],
            "name": "exampleFunction",
            "nameLocation": "1473:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:2:3"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1570:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1569:6:3"
            },
            "scope": 327,
            "src": "1464:146:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 463,
        "src": "422:1190:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 328,
              "name": "PublicWhitelist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 327,
              "src": "1646:15:3"
            },
            "id": 329,
            "nodeType": "InheritanceSpecifier",
            "src": "1646:15:3"
          }
        ],
        "canonicalName": "AuthorisedWhitelist",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 420,
        "linearizedBaseContracts": [
          420,
          327,
          223,
          104,
          126
        ],
        "name": "AuthorisedWhitelist",
        "nameLocation": "1623:19:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 333,
            "libraryName": {
              "id": 330,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 200,
              "src": "1674:8:3"
            },
            "nodeType": "UsingForDirective",
            "src": "1668:36:3",
            "typeName": {
              "id": 332,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 331,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 132,
                "src": "1687:16:3"
              },
              "referencedDeclaration": 132,
              "src": "1687:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$132_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 336,
            "mutability": "mutable",
            "name": "_whiteListCounter",
            "nameLocation": "1735:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 420,
            "src": "1710:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$132_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 335,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 334,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 132,
                "src": "1710:16:3"
              },
              "referencedDeclaration": 132,
              "src": "1710:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$132_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 340,
            "mutability": "mutable",
            "name": "compliantAddresses",
            "nameLocation": "1792:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 420,
            "src": "1759:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 339,
              "keyType": {
                "id": 337,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1767:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1759:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 338,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1778:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "1857:142:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 345,
                          "name": "whitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "1888:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 347,
                        "indexExpression": {
                          "id": 346,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "1909:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1888:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973743a20596f75206e65656420746f2062652077686974656c6973746564",
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986",
                          "typeString": "literal_string \"Whitelist: You need to be whitelisted\""
                        },
                        "value": "Whitelist: You need to be whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbc89407d00ab9f0c306754befeb3a1b0e795bf5ed7edeb0ec8dd2c86086f986",
                          "typeString": "literal_string \"Whitelist: You need to be whitelisted\""
                        }
                      ],
                      "id": 344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:114:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:114:3"
                },
                {
                  "id": 351,
                  "nodeType": "PlaceholderStatement",
                  "src": "1991:1:3"
                }
              ]
            },
            "id": 353,
            "name": "isAuthorised",
            "nameLocation": "1826:12:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1847:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1839:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1838:18:3"
            },
            "src": "1817:182:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "2075:160:3",
              "statements": [
                {
                  "expression": {
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 360,
                        "name": "compliantAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2085:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 362,
                      "indexExpression": {
                        "id": 361,
                        "name": "_addressToWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "2104:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2085:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2127:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2085:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "2085:46:3"
                },
                {
                  "expression": {
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 366,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "2141:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 368,
                      "indexExpression": {
                        "id": 367,
                        "name": "_addressToWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "2162:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2141:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2185:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2141:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:48:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 372,
                        "name": "_whiteListCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "2199:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$132_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 158,
                      "src": "2199:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$132_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$132_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "2199:29:3"
                }
              ]
            },
            "functionSelector": "7c6ebde9",
            "id": 378,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 358,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 357,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2065:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2065:9:3"
              }
            ],
            "name": "addCertificate",
            "nameLocation": "2014:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_addressToWhitelist",
                  "nameLocation": "2037:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "2029:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2029:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2028:29:3"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2075:0:3"
            },
            "scope": 420,
            "src": "2005:230:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "2314:262:3",
              "statements": [
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 385,
                        "name": "compliantAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2324:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 387,
                      "indexExpression": {
                        "id": 386,
                        "name": "_addressToWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "2343:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2324:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2366:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2324:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:47:3"
                },
                {
                  "expression": {
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 391,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "2381:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 393,
                      "indexExpression": {
                        "id": 392,
                        "name": "_addressToWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "2402:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2381:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2425:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2381:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:49:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 397,
                        "name": "_whiteListCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "2540:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$132_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decrement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "2540:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$132_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$132_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2540:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "2540:29:3"
                }
              ]
            },
            "functionSelector": "4069e45d",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 383,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 382,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2304:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2304:9:3"
              }
            ],
            "name": "removeCertificate",
            "nameLocation": "2250:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_addressToWhitelist",
                  "nameLocation": "2276:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "2268:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2267:29:3"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2314:0:3"
            },
            "scope": 420,
            "src": "2241:335:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "2707:52:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 414,
                      "name": "compliantAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "2724:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 416,
                    "indexExpression": {
                      "id": 415,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "2743:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2724:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 413,
                  "id": 417,
                  "nodeType": "Return",
                  "src": "2717:35:3"
                }
              ]
            },
            "functionSelector": "1e9d48cf",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 408,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2668:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2668:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 407,
                  "name": "isAuthorised",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 353,
                  "src": "2655:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2655:24:3"
              }
            ],
            "name": "checkUser",
            "nameLocation": "2591:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2609:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "2601:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2601:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2600:18:3"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "2697:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2697:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2696:6:3"
            },
            "scope": 420,
            "src": "2582:177:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 463,
        "src": "1614:1147:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 421,
              "name": "PublicWhitelist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 327,
              "src": "2782:15:3"
            },
            "id": 422,
            "nodeType": "InheritanceSpecifier",
            "src": "2782:15:3"
          }
        ],
        "canonicalName": "Holder",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 462,
        "linearizedBaseContracts": [
          462,
          327,
          223,
          104,
          126
        ],
        "name": "Holder",
        "nameLocation": "2772:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "2856:45:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 429,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2881:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Holder_$462",
                            "typeString": "contract Holder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Holder_$462",
                            "typeString": "contract Holder"
                          }
                        ],
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2873:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2873:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2873:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2873:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 426,
                  "id": 432,
                  "nodeType": "Return",
                  "src": "2866:28:3"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "2813:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2823:2:3"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "2847:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:9:3"
            },
            "scope": 462,
            "src": "2804:97:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 460,
              "nodeType": "Block",
              "src": "2944:143:3",
              "statements": [
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "owner_address",
                      "nameLocation": "2970:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 460,
                      "src": "2954:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 439,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2954:15:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2954:29:3"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 442,
                      "name": "owner_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "2993:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 445,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "3017:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3017:7:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3009:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3009:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3009:16:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2993:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "2993:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 455,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "3066:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Holder_$462",
                                "typeString": "contract Holder"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Holder_$462",
                                "typeString": "contract Holder"
                              }
                            ],
                            "id": 454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3058:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 453,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3058:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3058:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3058:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 450,
                        "name": "owner_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "3035:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3035:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:45:3"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 436,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2934:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2934:9:3"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2916:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2924:2:3"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2944:0:3"
            },
            "scope": 462,
            "src": "2907:180:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 463,
        "src": "2763:326:3",
        "usedErrors": []
      }
    ],
    "src": "37:3053:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC34032128346e00AF712FF7462A2688d7465c57C",
      "transactionHash": "0x95f3d0fa5cf74a703b3452b9f286a71e6f61ea7a9aa74145420159c3ab406ae5"
    },
    "1900": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5d7C3f1c38Fd92950Eb32aC0B005C80940170f81",
      "transactionHash": "0xb38855e768e909bf56e273549c1d67cb628d636f71fdc7103320a5b288c02604"
    },
    "80001": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x79962aA0d6792D61Af3E3649162def15D277C728",
      "transactionHash": "0x1a62f094a98d8507345b6adc220f282f2a8f251103497872a51e8f1394fc4409"
    },
    "1654766693666": {
      "events": {},
      "links": {},
      "address": "0x0EbC3A8Ab045611A70edfEAC04e5b6fc52256565",
      "transactionHash": "0x752d58ced16361238e8235a711c4e5d919bb5312e5c103893d6d33c507798e7f"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-13T12:48:05.599Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}